---
- name: Install Prometheus, Node Exporter, Alertmanager
  hosts: production
  become: true

  tasks:
    - name: Create Prometheus configuration directory
      ansible.builtin.file:
        path: "/etc/prometheus"
        state: directory
        mode: '0755'

    - name: Copy Prometheus configuration file
      ansible.builtin.copy:
        src: prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        mode: '0644'

    - name: Create Alertmanager Docker volume
      community.docker.docker_volume:
        name: alertmanager-data

    - name: Create Alertmanager configuration directory
      ansible.builtin.file:
        path: "/etc/alertmanager"
        state: directory
        mode: '0755'

    - name: Copy Alertmanager configuration file
      ansible.builtin.copy:
        src: alertmanager.yml
        dest: /etc/alertmanager/config.yml
        mode: '0644'

    - name: Start Alert Manager container
      community.docker.docker_container:
        name: alertmanager
        image: prom/alertmanager:{{ alertmanager_version }}
        restart_policy: unless-stopped
        networks:
          - name: monitoring
        volumes:
          - alertmanager-data:/data
          - /etc/alertmanager/:/etc/alertmanager
        command:
          - '--config.file=/etc/alertmanager/config.yml'
        state: started

    - name: Start Node Exporter container
      community.docker.docker_container:
        name: node-exporter
        image: prom/node-exporter:{{ node_exporter_version }}
        restart_policy: unless-stopped
        networks:
          - name: monitoring
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command:
          - '--path.procfs=/host/proc'
          - '--path.sysfs=/host/sys'
          - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
        state: started

    - name: Start Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus:{{ prometheus_version }}
        restart_policy: unless-stopped
        networks:
          - name: monitoring
        volumes:
          - /etc/prometheus:/etc/prometheus
          - /var/run/docker.sock:/var/run/docker.sock
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
        state: started
