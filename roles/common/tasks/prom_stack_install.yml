---
- name: Create Prometheus configuration directory
  ansible.builtin.file:
    path: "/etc/prometheus"
    state: directory
    mode: '0755'

- name: Copy Prometheus configuration file
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    mode: '0644'
  notify:
    - Restart Prometheus

- name: Test Prometheus alert rules
  delegate_to: localhost
  ansible.builtin.shell: promtool test rules roles/common/files/node_alerts_test.yml
  become: false

- name: Copy Prometheus rules file
  ansible.builtin.copy:
    src: node_rules.yml
    dest: /etc/prometheus/node_rules.yml
    mode: '0644'
  notify:
    - Restart Prometheus


- name: Copy Prometheus alerts file
  ansible.builtin.copy:
    src: node_alerts.yml
    dest: /etc/prometheus/node_alerts.yml
    mode: '0644'
  notify:
    - Restart Prometheus

- name: Create Alertmanager Docker volume
  community.docker.docker_volume:
    name: '{{ docker_prefix }}-alertmanager-data'

- name: Create Alertmanager configuration directory
  ansible.builtin.file:
    path: "/etc/alertmanager"
    state: directory
    mode: '0755'

- name: Copy Alertmanager configuration file
  ansible.builtin.template:
    src: alertmanager.yml.j2
    dest: /etc/alertmanager/config.yml
    mode: '0644'
  notify:
    - Restart Alert Manager

- name: Start Alert Manager container
  community.docker.docker_container:
    name: '{{ docker_prefix }}-alertmanager'
    image: prom/alertmanager:{{ alertmanager_version }}
    restart_policy: unless-stopped
    networks:
      - name: '{{ docker_network_name }}'
    volumes:
      - '{{ docker_prefix }}-alertmanager-data:/data'
      - /etc/alertmanager/:/etc/alertmanager
    ports:
      - '127.0.0.1:9093:9093'
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    state: started

- name: Start Node Exporter container
  community.docker.docker_container:
    name: '{{ docker_prefix }}-node-exporter'
    image: prom/node-exporter:{{ node_exporter_version }}
    restart_policy: unless-stopped
    networks:
      - name: '{{ docker_network_name }}'
    ports:
      - '127.0.0.1:9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    state: started

- name: Start Prometheus container
  community.docker.docker_container:
    name: '{{ docker_prefix }}-prometheus'
    image: prom/prometheus:{{ prometheus_version }}
    restart_policy: unless-stopped
    networks:
      - name: '{{ docker_network_name }}'
    ports:
      - '127.0.0.1:9090:9090'
    volumes:
      - /etc/prometheus:/etc/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--query.max-samples={{ prometheus_query_max_samples }}'
    state: started
    cpus: '{{ prometheus_cpus }}'
    memory: '{{ prometheus_memory }}'
